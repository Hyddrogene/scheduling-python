


### En février 2005, les étudiants du département de Design Industriel étaient révoltés et manifestaient à l'Université de Technologie d'Eindhoven (Pays-Bas). La révolte était palpable. Que s'était-il passé ? Voici l'histoire. L'année académique des quelque 350 étudiants de Design Industriel est divisée en plusieurs périodes. À chaque période, chaque étudiant doit suivre plusieurs petits cours. Il y a un pool d'environ 55 cours parmi lesquels choisir, et chaque étudiant soumet une liste de préférence ordonnée avec ses 10 cours favoris au département. Sur la base de toutes les listes de préférence ordonnées, un planificateur du département assigne ensuite environ quatre cours à chaque étudiant. Jusqu'à récemment, le planificateur était une personne qui appliquait essentiellement une procédure d'affectation avide faite à la main.

En février 2005, les étudiants étaient absolument insatisfaits du travail du planificateur humain : beaucoup d'entre eux n'ont pas obtenu les cours qu'ils auraient aimé avoir ; beaucoup d'entre eux ont été affectés à des cours qu'ils ne voulaient vraiment pas suivre ; et plus de 150 des 350 étudiants ont reçu des cours qui ne figuraient pas sur leur liste de préférence !

Le département de Design Industriel a réalisé qu'ils avaient un problème. Ils ont également réalisé qu'ils ne savaient pas comment résoudre ce problème. Le nombre d'étudiants avait considérablement augmenté, et le problème de planification était devenu beaucoup plus grand, beaucoup plus difficile et beaucoup plus complexe. Par conséquent, le département a contacté les experts locaux sur le campus : nous. Ils espéraient trouver une affectation quelque peu meilleure grâce à des programmes informatiques. Ils nous ont expliqué leur problème (dans une certaine formulation de problème n°1), et nous leur avons dit avec joie que nous serions en mesure de le résoudre : le problème (dans la formulation n°1) pouvait être modélisé comme un problème de flux dans un réseau, et donc il était solvable en temps polynomial. Malheureusement, il s'est avéré que la formulation n°1 n'était pas une formulation complète du problème : ils avaient oublié de nous informer d'un certain nombre de restrictions supplémentaires qui ont conduit à un nouveau problème d'affectation plus difficile (dans la formulation n°2), qui s'est finalement révélé être NP-difficile.

Cet article est un rapport sur le problème d'affectation de cours du département de Design Industriel. Nous décrivons le problème d'affectation dans sa formulation (incomplète) n°1 et dans sa formulation (complète) n°2. Nous montrons que la formulation n°1 donne un problème tractable, tandis que la formulation n°2 donne un problème intractable. Notre principale contribution est une étude de cas minutieuse de la formulation complète du problème. Nous concevons un modèle élégant de programmation linéaire en nombres entiers (ILP) pour celui-ci, avec environ 9000 variables et environ 7000 contraintes. Mettre ce modèle ILP dans CPLEX donne d'excellents résultats en des temps de calcul modérés. Nous décrivons le modèle ILP en détail, et nous rapportons nos expériences de calcul avec les données réelles du département de Design Industriel.

### Structure de l'article
Le reste de l'article est structuré de la manière suivante. Dans la section 2, nous présentons une revue de la littérature sur la planification universitaire et scolaire. La section 3 contient une description détaillée du problème que nous avons résolu pour le département de Design Industriel. Le problème est formulé comme un programme linéaire en nombres entiers, décrit dans la section 4. La section 5 contient les résultats des calculs. Quelques conclusions sont données dans la section 6.


### 2. Revue de la littérature

La littérature contient un grand nombre de variantes du problème de planification des emplois du temps. Ces variantes diffèrent les unes des autres par le type d'institution impliquée (université ou lycée) et par le type de contraintes. La bibliographie annotée de la construction des emplois du temps par Schmidt et Ströhlein [22] répertorie de nombreux articles parus avant 1980. Schaerf [21] propose une enquête sur les différentes formulations des problèmes de planification des emplois du temps et classe le problème en trois grandes catégories : la planification scolaire, la planification des examens et la planification des cours. Bien sûr, cette classification est sommaire, et de nombreux problèmes de planification réels se situent entre deux de ces catégories. Pour des enquêtes sur les méthodes et applications de planification, voir de Werra [11], Burke et al. [3], Carter et Laporte [8] et Burke et Petrovic [5].

Le problème de planification scolaire de base est également connu sous le nom de modèle enseignant-classe. Le problème le plus simple consiste à affecter des cours à des périodes de manière à ce qu'aucun enseignant ou classe ne soit impliqué dans plus d'un cours à la fois. Even et al. [13] ont prouvé qu'il existe toujours une solution à cette version simplifiée du problème de planification scolaire, sauf si un enseignant ou une classe est impliqué dans plus de cours qu'il n'y a de créneaux horaires. Des formulations alternatives du problème de planification scolaire avec plus de contraintes peuvent être trouvées, par exemple, chez Even et al. [13], Garey et Johnson [15] et de Werra [11]. Daskalaki et Birbas [10] proposent une formulation en programmation linéaire en nombres entiers du problème enseignant-classe et le résolvent avec une procédure de relaxation en deux étapes. Le problème est formulé comme un problème d'emballage de sets avec des contraintes supplémentaires par Avella et Vasilev [2]. Ils renforcent la formulation en ajoutant les inégalités valides du polytope de l'emballage de sets et introduisent de nouvelles inégalités valides.

La planification universitaire peut être classée en deux catégories : la planification des cours et des examens. Petrovic et Burke [19] discutent des énoncés de problèmes et donnent un aperçu des résultats de recherche récents sur la planification universitaire. Les principales différences entre la planification des cours et des examens sont que la planification des examens ne comporte qu'un seul examen par cours, que la condition de conflit de temps est stricte et que plusieurs examens peuvent être effectués simultanément dans une même salle. Parmi les contraintes souples supplémentaires, on peut citer : les étudiants ne peuvent passer qu'un seul examen par jour, et les étudiants ne doivent pas avoir trop d'examens consécutifs. Schaerf [21] propose une formulation en programmation linéaire en nombres entiers du problème de planification des examens et décrit certaines variantes alternatives du problème. Carter et Laporte [7] fournissent un aperçu de la planification des examens.

Le problème de la planification des cours consiste à planifier un ensemble de cours pour chaque matière dans un nombre donné de salles et de périodes. La principale différence avec le problème de la planification scolaire est que les cours universitaires peuvent avoir des étudiants communs, alors que les classes scolaires sont des ensembles disjoints d'étudiants. De Werra [11] propose une formulation en programmation linéaire binaire en nombres entiers. Un aperçu des problèmes de planification des cours est donné par Carter et Laporte [8] et Schaerf [21] discute de certaines des variantes les plus courantes de la formulation de base. La conception et la mise en œuvre d'un système d'aide à la décision pour construire un emploi du temps combiné de cours et d'examens universitaires sont rapportées par Dimopoulou et Miliotis [12]. Ils tiennent également compte de la flexibilité accrue des préférences des étudiants pour des cours spécifiques.

Une variante est appelée sous-problème de regroupement ou problème de planification des étudiants. Si le nombre d'étudiants est trop grand pour une seule salle, les cours sont répartis en groupes d'étudiants et il y a des conditions sur le nombre minimum et maximum d'étudiants qui peuvent être affectés à chaque groupe. Un étudiant doit suivre un certain nombre de cours, qu'il doit choisir lui-même après la mise à disposition d'un emploi du temps. Le problème consiste à affecter un étudiant à un groupe spécifique d'un cours pour un emploi du temps fixe de manière à ce que les étudiants soient satisfaits et qu'il n'y ait pas de conflits de temps, voir Busam [6], Feldman et Golumbic [14] et Laporte et Desrochers [16].

Cheng et al. [9] discutent du problème de la planification des étudiants (SSP) tel qu'il s'applique généralement aux lycées en Amérique du Nord. Ils définissent le problème comme l'affectation des cours et d'une section spécifique à chaque étudiant. L'objectif est de répondre aux demandes des étudiants, en fournissant un emploi du temps sans conflit. Ils montrent que le problème est NP-difficile et discutent de diverses formulations de flux multi-commodités avec des capacités fractionnaires et des gains intégraux. La principale différence entre le SSP et notre problème de planification des emplois du temps est que pour le SSP, tous les cours sur la liste de préférences des étudiants doivent être affectés aux étudiants. Cela se traduit par un ensemble de solutions faisables vide dans la plupart des cas pratiques.

Laporte et Desrochers [16] proposent une formulation mathématique du problème de planification des étudiants. Ils formulent le problème comme un problème d'optimisation en divisant les exigences en contraintes strictes et souples. La seule contrainte stricte dans leur modèle est que les sélections de cours des étudiants doivent être respectées. Les conflits de temps pour les étudiants sont des contraintes souples. Lorsque des conflits de temps surviennent, les étudiants sont invités à faire une sélection de cours différente. Le problème est alors résolu en trois phases : dans la première, l'algorithme recherche une solution admissible, dans la deuxième, les inscriptions sont équilibrées et dans la troisième, les capacités des salles doivent être respectées. Tripathy [23] a formulé le problème de la planification des étudiants comme un problème de programmation linéaire en nombres entiers et utilise la relaxation lagrangienne pour le résoudre. Sabin et Winter [20] utilisent une approche avide modérée par un ordonnancement intelligent des étudiants. Miyaji et al. [18] appliquent la programmation par objectifs.

McCollum [17] explique que pour la planification universitaire, il existe toujours un écart entre un projet de recherche réussi et ce qui est nécessaire en pratique. Il tente de combler cet écart entre la recherche et la pratique en fournissant des informations actualisées issues de la pratique qui sont nécessaires aux chercheurs. Burke et al. [4] et Zampieri et Schaerf [24] notent que de nombreuses méthodologies de recherche décrites dans la littérature ne sont pas applicables dans la plupart des établissements d'enseignement, car elles sont trop simplifiées.

Carter et Laporte [8] notent qu'ils étaient « quelque peu surpris de découvrir qu'il y a très peu d'articles sur la planification des cours qui rapportent réellement que les méthodes (de recherche) ont été mises en œuvre et utilisées dans les institutions ». McCollum [17] explique que la situation n'a guère changé au cours de la dernière décennie. Notre article est un exemple de mise en œuvre réussie d'un modèle de programmation mathématique pour un problème spécifique de planification des cours.


### 3. Description du problème

Lors de notre première réunion, le département de design industriel nous a expliqué le problème selon une certaine formulation n°1 ; voir la section 3.1. Ce problème peut être modélisé comme un problème de flot de réseau, et est donc résoluble en temps polynomial ; voir Ahuja et al. [1].

Malheureusement, nous avons appris après un certain temps que la formulation n°1 n'était pas une formulation complète du problème. Ils avaient en fait oublié de nous parler d'un certain nombre de restrictions supplémentaires qui nous ont conduit à une nouvelle formulation plus difficile du problème, la formulation n°2. La section 3.2 décrit la formulation n°2.

#### 3.1 Formulation du problème n°1

Lors de la première réunion avec le département de design industriel, on nous a dit que chaque étudiant soumettait une liste de préférences d'au maximum 10 cours et demandait un certain nombre de cours. Les seules contraintes sont qu'un étudiant ne peut pas suivre deux cours en même temps et qu'il y a un nombre maximum d'étudiants qui peuvent être affectés à un cours. Cette section contient une description plus détaillée de la formulation du problème n°1.

Un ensemble C de cours et pour chaque cours c une limite supérieure Cmax c sur le nombre d'étudiants est donnée. Ce nombre dépend de la préférence de l'enseignant et de la capacité de la salle dans laquelle le cours est dispensé. Chaque cours a un créneau horaire hebdomadaire déjà fixé. Ce créneau hebdomadaire consiste toujours en deux heures consécutives. Deux heures consécutives sont définies comme un créneau horaire. Le créneau horaire hebdomadaire d'un cours est choisi parmi un ensemble T de créneaux horaires disjoints. T(c) est défini comme le créneau horaire qui est le créneau hebdomadaire du cours c. Ainsi, une des contraintes du modèle est que les cours ci et cj ne peuvent pas être affectés à un étudiant si T(ci) = T(cj).

Nous définissons S comme l'ensemble des étudiants. Pour chaque étudiant s, le nombre de cours demandés rs est donné. Ps est défini comme l'ensemble des positions sur la liste de préférences pour lesquelles l'étudiant s a rempli un cours. La plupart des étudiants ont Ps = {1, . . . , 10}. Il y a aussi des étudiants qui soumettent une liste de préférences plus courte. Par exemple, un étudiant presque diplômé qui n'a plus qu'un seul cours à suivre, qui doit être un cours de mathématiques, soumet une liste de préférences avec seulement des cours de mathématiques. Pour un étudiant s avec seulement six cours sur sa liste de préférences, nous avons Ps = {1, . . . , 6}. Le tableau 1 donne quelques exemples de listes de préférences. La colonne Pi donne le nom de code du cours à la position i de la liste de préférences. Le paramètre csp est introduit et est égal à c si le cours c est à la position p de la liste de préférences de l'étudiant s.

En résumé, les données d'entrée de la formulation du problème n°1 comprennent :
- un ensemble T de créneaux horaires ;
- un ensemble C de cours ; pour chaque cours c ∈ C, un créneau horaire T(c) et un nombre maximum Cmax c d'étudiants participants sont donnés ;
- un ensemble S d'étudiants ; pour chaque étudiant s ∈ S, un ensemble Ps de positions remplies sur la liste de préférences, un cours csp pour chaque position p ∈ Ps et un nombre rs de cours demandés est donné.

L'objectif est d'affecter autant de cours que possible aux étudiants, tout en :
- ne dépassant pas le nombre de cours demandés par l'étudiant s ;
- affectant aux étudiants uniquement des cours figurant sur leur liste de préférences ;
- évitant les conflits d'horaires entre les cours assignés à un étudiant ;
- ne dépassant pas le nombre maximum d'étudiants assignés à un cours.

Ce problème peut être modélisé comme un problème de flot de réseau. Une description de ce modèle de flot de réseau est donnée en Annexe A.

#### 3.2 Formulation du problème n°2

Lorsque nous avons reçu le premier ensemble de données du département de design industriel, nous avons été très surpris : il y avait soudainement aussi des limites inférieures Cmin c sur le nombre d'étudiants participant à un cours c. Cela introduit la nouvelle contrainte qu'un cours ne sera donné que si au moins Cmin c étudiants y participent. Cette nouvelle contrainte ne peut pas être modélisée comme une contrainte de flux, et donc le modèle de flot maximum en Annexe A devient obsolète. En fait, la nouvelle contrainte rend le problème NP-difficile ; voir Annexe B. Après avoir examiné les données plus attentivement et après des conversations avec le département de design industriel, nous avons remarqué qu'il y avait beaucoup plus de restrictions. Cette section explique ces restrictions supplémentaires et définit le problème plus en détail.

Une année académique est divisée en un certain nombre de périodes d'enseignement. Par exemple, l'année académique 2005-2006 est divisée en six périodes d'enseignement. Nous définissons une telle période d'enseignement comme un bloc. Le département de design industriel souhaite que nous planifiions deux blocs consécutifs simultanément. Par conséquent, l'ensemble B est introduit comme l'ensemble des blocs qui doivent être planifiés simultanément.

Dans la formulation du problème n°1, nous supposions que la charge de travail de tous les cours était égale. Cependant, il y a des cours avec une charge de travail de 40 heures et des cours avec une charge de travail de 80 heures. Dans la suite de ce document, une charge de travail de 1 correspond à une charge de travail de 40 heures. En Annexe B, nous prouvons que le fait d'avoir des cours avec une charge de travail de 1 et des cours avec une charge de travail de 2 rend le problème NP-difficile. Pour chaque cours c ∈ C et bloc b ∈ B, le paramètre w(c, b) est défini comme la charge de travail du cours c dans le bloc b. Ainsi, pour un cours c avec une charge de travail de 80 heures dans le bloc b, nous avons w(c, b) = 2.

Dans la formulation du problème n°2, la définition de rs est ajustée en fonction de la charge de travail demandée par l'étudiant s pour |B| blocs ensemble. Pour chaque étudiant s, une charge de travail maximale rsb pour chaque bloc b ∈ B est donnée séparément, car la charge de travail demandée par un étudiant n'est pas toujours répartie également sur tous les blocs b ∈ B. Par exemple, si l'étudiant s doit effectuer un stage pratique dans le bloc b2, il a rs = 2, rsb1 = 2 et rsb2 = 0.

Dans la formulation du problème n°1, il était supposé qu'un cours avait une réunion par semaine, donc un seul créneau horaire. Mais il y a aussi des cours qui ont deux réunions hebdomadaires, et donc deux créneaux horaires. Si des cours avec deux créneaux horaires sont introduits dans la formulation du problème n°1, le problème ne peut pas être modélisé comme un problème de flot de réseau.

L'ensemble C des cours contient des cours avec plusieurs sections, ce qui signifie que le cours est répété pendant la semaine. Le tableau 2 contient le cours DA242 comme exemple. Par exemple, le créneau horaire B1TM2 représente la deuxième partie de la matinée du mardi dans le bloc 1. Les charges de travail d'un cours dans les blocs 1 et 2 sont indiquées par wlb1 et wlb2. Le cours DA242 a cinq sections qui ont toutes deux créneaux horaires. Nous définissons I comme l'ensemble des sections offertes aux étudiants. Pour chaque section i ∈ I, son cours c(i) ∈ C est donné, ainsi qu'un nombre minimum Cmin i et maximum Cmax i d'étudiants. Les horaires de réunion pour chaque section i ∈ I sont donnés sous forme de créneaux horaires T(i) ⊆ T. Il y a quelques cours, par exemple les études littéraires, qui ne sont pas affectés à un créneau horaire et donc T(i) = ∅.

Une autre contrainte apparaît si les étudiants ont des besoins spécifiques, par exemple lorsqu'ils terminent presque leurs études et qu'ils n'ont plus qu'un seul cours à passer. Dans ce cas, un cours sur la liste de préférences de l'étudiant peut être défini comme urgent. Tant que le nombre maximum d'étudiants (tous avec une urgence) n'est pas attribué à ce cours, le cours doit être attribué à l'étudiant. Un cours urgent pour un étudiant doit être donné. Dans ce cas, il n'importe pas si le nombre minimum d'étudiants est atteint ou non. Nous définissons U comme l'ensemble contenant toutes les combinaisons (s, p) pour lesquelles le cours csp est urgent pour l'étudiant s.

Quelques cours ont des horaires de réunion répartis sur deux blocs. Voir par exemple le cours DA247 dans le tableau 2. Ce cours a deux sections et une charge de travail totale de deux qui est répartie également sur les deux blocs. Si un étudiant est affecté à une section de ce cours dans un bloc, il doit être affecté à la même section de ce cours dans le

 bloc suivant. Par conséquent, il est également possible que des cours soient donnés dans deux blocs qui ne sont pas planifiés simultanément. Si cela se produit, cela implique qu'il y a déjà des étudiants préassignés à des sections si l'emploi du temps du deuxième bloc est établi. Par conséquent, nous introduisons l'ensemble F des fixations qui contient les combinaisons (s, p, i) pour lesquelles la section i du cours csp est déjà attribuée à l'étudiant s. Cela entraîne des contraintes strictes qui ne conduisent pas à une solution infaisable, car ces étudiants sont affectés pendant la période de planification précédente.

En résumé, les données d'entrée de la formulation du problème n°2 comprennent :
- un ensemble B de blocs à planifier simultanément ;
- un ensemble T de créneaux horaires ;
- un ensemble C de cours ; pour chaque cours c, sa charge de travail w(c, b) pour chaque bloc b est donnée ;
- un ensemble S d'étudiants ; pour chaque étudiant s, une charge de travail totale demandée rs, une charge de travail demandée rsb pour chaque bloc séparément, un ensemble Ps de positions remplies sur la liste de préférences et pour chaque position p ∈ Ps, un cours csp est donné ;
- un ensemble I de sections ; pour chaque section i, son cours c(i), un nombre minimum Cmin i et maximum Cmax i d'étudiants et un ensemble de créneaux horaires T(i) ⊆ T sont donnés ;
- un ensemble U de combinaisons (s, p) pour lesquelles le cours csp est urgent pour l'étudiant s ;
- un ensemble F de combinaisons (s, p, i) pour lesquelles la section i du cours csp est déjà préassignée à l'étudiant s.

Notre objectif principal est d'attribuer la charge de travail aux étudiants autant que possible, tout en :
- maintenant le nombre d'étudiants dans une section en dessous d'une taille maximale prescrite,
- assurant que la charge de travail totale attribuée à l'étudiant s est inférieure ou égale à rs,
- garantissant que la charge de travail attribuée à l'étudiant s dans le bloc b est inférieure ou égale à rsb,
- évitant les conflits d'horaires entre les sections attribuées à un étudiant,
- attribuant uniquement aux étudiants des sections de cours figurant sur leur liste de préférences,
- attribuant uniquement une section par cours à un étudiant,
- attribuant la section i à l'étudiant s si (s, p, i) ∈ F.

Les contraintes souples sont, par exemple, la répartition des étudiants sur les sections, une section devant être attribuée à au moins un certain nombre minimum d'étudiants et l'étudiant s devant être attribué au cours csp si (s, p) ∈ U.
