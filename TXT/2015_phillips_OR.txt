### 1. Introduction

La planification des cours universitaires est un important problème d'allocation de ressources, dans lequel les horaires et les salles sont déterminés pour chaque cours. En raison de la complexité et de la taille des problèmes de planification modernes, une grande partie de la littérature académique propose des méthodes de solution purement heuristiques. Cependant, ces dernières années, les méthodes de programmation en nombres entiers (IP) ont suscité un intérêt croissant. Au moment de la rédaction, MirHassani et Habibi [23] ont réalisé l'enquête la plus récente sur la planification des cours universitaires, couvrant certaines des approches IP ainsi que les paradigmes heuristiques les plus populaires.

Certaines études de programmation en nombres entiers ont été menées dans un cadre pratique (par exemple [30,31]), bien que les modèles ne soient inévitablement résolus que pour une petite université ou un seul département dans une grande université. Ceux-ci sont inadaptés aux grandes universités où la majorité de l'espace d'enseignement est partagé entre départements et facultés.

Bien qu'il ne soit pas encore possible de résoudre de manière optimale un problème de planification des cours pratiques à grande échelle [8], le problème peut être décomposé en un problème de génération d'horaires suivi d'un problème d'affectation des salles (également connu sous le nom de "temps d'abord, salles ensuite"). D'après notre expérience, cette décomposition est couramment utilisée en pratique. Les facultés ou départements peuvent préférer générer un emploi du temps pour leurs cours et conserver le contrôle sur les exigences et préférences uniques. Cela contraste avec l'affectation des salles, qui doit être effectuée de manière centralisée dans les institutions disposant d'un espace d'enseignement partagé. Pour cette raison, dans certaines institutions, le problème d'affectation des salles est la seule partie de la planification des cours utilisant la prise de décision assistée par ordinateur.

La formulation la plus élémentaire du problème d'affectation des salles tente de trouver une affectation réalisable pour un ensemble de cours (ou d'événements) à un ensemble de salles. Une mesure simple de la qualité peut également être utilisée, où un coût est attribué à toutes les affectations possibles d'événements à des salles. Cette formulation permet de modéliser chaque période de temps comme un problème d'affectation indépendant, qui peut être résolu en temps polynomial [11]. Cela équivaut à trouver un appariement biparti pondéré maximal entre l'ensemble des événements et l'ensemble des salles, comme mis en œuvre par Lach et Lübbecke [20].

Le problème devient plus complexe si les événements varient en durée, et chaque événement doit occuper une seule salle pendant toute cette durée (appelée stabilité de salle contiguë). Bien que ce soit un problème plus utile en pratique, les interdépendances entre les blocs de périodes de temps contiguës rendent ce problème NP-difficile même pour seulement deux périodes [11]. Glassey et Mizrach [16] proposent une formulation de programmation en nombres entiers pour ce problème, mais ne la résolvent pas en raison du nombre prohibitif de variables (par rapport aux ressources informatiques disponibles), et de la possibilité de solutions non entières pour la relaxation LP. Ils proposent plutôt une procédure heuristique simple.

Gosselin et Truchon [17] abordent également le problème (avec stabilité de salle contiguë) en utilisant une formulation de programmation en nombres entiers, et agrègent les variables pour réduire la taille du problème. Lors de la résolution de leur modèle, ils remarquent que la méthode du simplexe a donné des solutions entières pour la relaxation LP dans chaque cas de test. Carter [10] mène l'étude la plus avancée sur ce problème, où l'exigence de stabilité de salle contiguë est appliquée en utilisant une méthode de relaxation lagrangienne itérative. Une large gamme de mesures de qualité est considérée, pondérée et combinée (scalarisée) en une seule fonction objective. L'auteur décrit également l'expérience de la satisfaction des exigences du personnel et de l'administration lors de la mise en œuvre de cette méthode à l'Université de Waterloo, au Canada.

Les formulations les plus complexes du problème d'affectation des salles sont capables de traiter des mesures de qualité qui causent des interdépendances entre n'importe quel sous-ensemble de périodes de temps, plutôt qu'un simple bloc contigu. L'exemple le plus courant est la minimisation du nombre de salles différentes utilisées par chaque cours (appelée stabilité de salle de cours), ce qui rend le problème NP-difficile [11]. Dans le cadre d'un travail plus large, Qualizza et Serafini [28] proposent un programme en nombres entiers pour résoudre ce problème, bien qu'ils n'incluent pas de résultats. Lach et Lübbecke [21] proposent également un programme en nombres entiers qui modélise la stabilité de salle de cours, dans le cadre de leur solution aux problèmes posés dans la Track 3 de la compétition internationale de planification de 2007 (ITC) [13]. Bien que Lach et Lübbecke [21] incluent des résultats computationnels complets, ils ne concernent que les problèmes abstraits de l'ITC et ne considèrent qu'une seule mesure de qualité. En pratique, il est souvent souhaitable de considérer plusieurs mesures de qualité simultanément.

Nous reconnaissons également des définitions alternatives du problème d'affectation des salles dans le cadre de la planification des cours universitaires. Dammak et al. [12] et Elloumi et al. [15] utilisent des méthodes heuristiques pour aborder l'affectation des salles dans le contexte de la planification des examens, où il est possible d'attribuer plus d'un événement à une salle (à une période donnée). Mirrazavi et al. [24] appliquent la programmation par objectifs entiers à un problème similaire où plusieurs 'sujets' sont affectés ensemble dans des salles.

Dans cet article, nous proposons une nouvelle méthode basée sur la programmation en nombres entiers pour le problème d'affectation des salles dans la planification des cours universitaires. Notre méthode se révèle polyvalente en termes de capacité de modélisation, capable de gérer plusieurs mesures de qualité concurrentes, et applicable aux problèmes pratiques de grande envergure. Nous validons la méthode avec des résultats computationnels sur des données de l'Université d'Auckland, en Nouvelle-Zélande, et offrons un aperçu du processus de planification utilisé jusqu'en 2010. Nous présentons également des résultats computationnels pour les problèmes de la compétition internationale de planification de 2007 (ITC). Grâce à ce travail, nous sommes en mesure d'approfondir les résultats précédents sur la difficulté des problèmes d'affectation des salles. Bien que la plupart des variantes du problème d'affectation des salles rencontrées en pratique soient NP-difficiles, nous démontrons pourquoi de nombreuses instances peuvent être résolues efficacement.

Le reste de cet article est organisé comme suit. La section 2 fournit un exemple simple d'un problème d'affectation des salles, décrit un modèle général de programmation en nombres entiers et introduit certaines mesures de qualité courantes. La section 3 offre un aperçu de la structure matricielle du programme en nombres entiers et montre comment des fractions peuvent apparaître dans la relaxation de programmation linéaire. Cela nous permet d'identifier quelles situations pratiques et quelles mesures de qualité rendront le programme en nombres entiers plus facile ou plus difficile à résoudre. La section 4 détaille un système de planification utilisé à l'Université d'Auckland et explique comment les considérations pratiques sont modélisées dans notre approche. Dans la section 5, nous présentons les résultats de notre méthode sur les données de l'Université d'Auckland et sur les problèmes de l'ITC. Nous abordons également certaines lacunes des problèmes de l'ITC qui suggèrent qu'ils ne sont pas représentatifs en termes de taille ou de structure de la plupart des problèmes de planification pratiques. Enfin, la section 6 présente les principales conclusions de notre travail et les directions futures de recherche.




### 2. Modèle de regroupement pour l'affectation des salles de classe

Dans cette section, nous introduisons le problème d'affectation des salles de classe à l'aide d'un petit exemple et démontrons comment ce type de problème peut être modélisé comme un problème de regroupement maximal [27]. Pour résoudre ce problème, nous proposons une approche basée sur la programmation en nombres entiers, qui garantit la faisabilité (ou l'infaisabilité) de l'affectation des salles et la qualité de la solution. La programmation en nombres entiers pour les problèmes de regroupement a également été appliquée à de petites instances du problème plus large de la planification des cours [2].

Pour gérer différentes mesures de qualité, notre modèle est résolu séquentiellement pour une série prescrite de mesures de qualité de solution. La qualité par rapport à chaque mesure est préservée dans les solutions ultérieures à l'aide d'une contrainte explicite. Dans la terminologie de l'optimisation multi-objectifs [14], il s'agit d'un algorithme d'optimisation lexicographique, qui est garanti de trouver une solution optimale de Pareto, c'est-à-dire qu'aucune mesure de qualité ne peut être améliorée sans réduire la qualité d'au moins une autre mesure.

Dans la planification pratique, il peut ne pas toujours être possible de trouver une salle pour tous les événements d'enseignement (en raison de la structure de l'emploi du temps), c'est-à-dire que l'affectation des salles est infaisable. Pour gérer cette situation, notre approche trouvera une affectation partielle efficace des salles, qui utilise au mieux les salles disponibles. Elle identifiera également précisément quelles périodes de temps sont sur-réservées et quelles tailles (et types) de salles sont en pénurie à chaque période. Cette information est importante lorsque les planificateurs décident de modifier l'emploi du temps, et les analyses associées peuvent également être utiles à d'autres parties administratives pour comprendre les goulots d'étranglement du système.

#### 2.1. Exemple introductif

Un problème d'affectation des salles de classe se pose lorsqu'un ensemble d'événements d'enseignement (par exemple, des cours) nécessite l'utilisation d'une salle appropriée pendant leur période de temps prescrite. Chaque événement fait partie d'un cours, qui définit la taille de l'événement (c'est-à-dire le nombre d'inscriptions au cours) et les attributs de la salle requis pour cet événement. Le Tableau 1 contient ces données sur les cours et les événements pour un exemple de problème. Les définitions précises de la terminologie et de la notation utilisées dans les en-têtes de colonne sont fournies dans la Section 2.2.

Le Tableau 2 contient les données sur les salles disponibles. Chaque salle a une taille (c'est-à-dire la capacité maximale d'accueil des étudiants), un ensemble d'attributs de salle et un ensemble de périodes de temps pendant lesquelles cette salle peut être utilisée. Un modèle simple pour le problème d'affectation des salles utilise des variables correspondant à une affectation réalisable d'un événement à une salle. Cependant, une approche plus générale modélise l'affectation d'un ensemble d'événements, ou modèle, à une salle réalisable.

En traitant les données des Tableaux 1 et 2, nous pouvons générer les données centrales du problème pour l'Exemple 1 dans le Tableau 3. Pour chaque cours, nous montrons à quelle période de temps chaque événement de cours a lieu, les salles réalisables pour ces événements (déterminées par la taille et les attributs de la salle), et les modèles de cours (tous les sous-ensembles possibles d'événements de cours).

Les affectations garantissent que chaque salle est utilisée au maximum une fois à chaque période de temps. Si notre objectif est de maximiser le nombre d'événements affectés, cette solution est clairement optimale, avec tous les événements affectés. Si nous voulons également minimiser le nombre de salles différentes utilisées par chaque cours, la solution peut être améliorée en affectant le modèle {e2, e3} du cours c3 à la salle r1.

#### 2.2. Notation

Un événement d'enseignement e est une réunion entre le personnel et les étudiants (par exemple, un cours), qui nécessite une salle pendant la durée d'une période de temps dans le domaine de la planification (généralement une semaine). Soit E l'ensemble des événements. Un cours c est un ensemble d'événements liés, qui nécessitent une salle d'une taille d'au moins size c (mesurée par le nombre de sièges) et possédant au moins les attributs de salle att c. Soit C l'ensemble de tous les cours. L'ensemble des cours C partitionne l'ensemble des événements E, c'est-à-dire E = ⋃c ∈ C c, et c1 ∩ c2 = ∅ pour tous c1, c2 ∈ C.

Un modèle de réunion p est défini comme un sous-ensemble d'événements pour un cours donné qui sera affecté à la même salle. Pour le cours c, soit P c l'ensemble de tous ses modèles, l'ensemble des parties des événements du cours. Soit length c et length p le nombre d'événements dans un cours et un modèle respectivement. En tant qu'ensemble des parties, P c comportera 2^(length c) -1 éléments, ce qui pourrait potentiellement être grand. Cependant, en pratique, le nombre d'événements par cours est généralement assez petit (par exemple, en moyenne entre 2 et 3 à l'Université d'Auckland). Soit P l'ensemble de tous les modèles, c'est-à-dire P = ⋃c ∈ C P c. Notez que bien que chaque modèle p identifie de manière unique un ensemble d'événements, un événement se trouve généralement dans plus d'un modèle. Cela est évident dans l'Exemple 1, où le Tableau 3 montre les événements dans chaque modèle pour tous les cours. Soit P e l'ensemble de tous les modèles contenant l'événement e, c'est-à-dire P e = {p ∈ P : e ∈ p}.

Soit R l'ensemble des salles dans le pool des espaces d'enseignement commun, où size r et att r correspondent à la taille de la salle et à l'ensemble des attributs de la salle pour une salle r. Rc représente l'ensemble des salles adaptées aux événements du cours c, c'est-à-dire Rc = {r ∈ R : size r ≥ size c; att r ⊇ att c}. En utilisant cette définition, les données des cours et des salles des Tableaux 1 et 2 respectivement peuvent être traitées pour générer Rc pour chaque cours dans le Tableau 3. Un modèle p de cours c aura l'ensemble des salles réalisables pour ce modèle Rp, comme un sous-ensemble de Rc. Pour les salles dans Rc, la préférence d'un cours pour une salle particulière est donnée par une fonction de préférence Pref (c, r). Cela est généralement utilisé pour placer les cours dans des bâtiments aussi proches que possible de leur département d'enseignement, mais peut être utilisé pour toute mesure de préférence, par exemple des salles plus modernes.

Soit A l'ensemble de tous les attributs des salles, c'est-à-dire A = ⋃r ∈ R att r. En plus des attributs physiques des salles, cet ensemble peut contenir des attributs auxiliaires abstraits pour aider à la modélisation. Par exemple, une salle peut posséder l'attribut d'être dans une distance géographique maximale donnée d'un département d'enseignement particulier. Les attributs de salle abstraits peuvent également être utilisés si un cours souhaite éviter un attribut de salle indésirable. Dans le cas général, cela peut être modélisé en générant un attribut de salle complémentaire correspondant à "ne possédant pas" l'attribut indésirable. L'ensemble des salles est ainsi partitionné par celles ayant l'attribut original indésirable et celles ayant l'attribut complémentaire. Dans de nombreux cas, des partitions de l'ensemble des salles existent déjà (par exemple, si les salles sont désignées comme l'un des plusieurs types), auquel cas demander une salle avec un attribut exclut automatiquement d'être affecté à une salle avec les autres attributs.

Soit T l'ensemble de toutes les périodes de temps utilisables dans le domaine de la planification, qui sont de durée commune (souvent une heure) et non chevauchantes. Pour les problèmes pratiques, nous introduisons également T r pour désigner l'ensemble des périodes de temps pendant lesquelles la salle r est disponible pour l'enseignement. En raison d'autres événements présélectionnés, chaque salle peut avoir son propre ensemble unique de périodes de temps disponibles. Chaque événement e ∈ E se produit pendant une période de temps prescrite T e donnée par l'emploi du temps. Pour chaque modèle p ∈ P, soit T p l'ensemble des périodes de temps dans lesquelles ce modèle se trouve, c'est-à-dire T p = ⋃e ∈ p T e.

Bien que de nombreuses réunions de classe aient lieu en une seule période, certaines peuvent durer deux périodes ou plus (par exemple, des travaux dirigés ou des laboratoires) que nous appelons des événements longs. Les événements longs nécessitent un événement e ∈ E pour chaque période de temps pendant laquelle ils se déroulent. Si un événement long nécessite la même salle pour toute sa durée, nous appelons cela stabilité de salle contiguë. Cela est appliqué en élaguant l'ensemble des modèles pour ce cours, P c, pour n'inclure que les modèles qui contiennent tous ou aucun de ces événements. Parce que tous les événements d'un modèle sont affectés

 à la même salle, cela impose la contrainte de stabilité de salle contiguë.

Enfin, soit P rt l'ensemble de tous les modèles qui incluent un événement pendant la période de temps t et pour lesquels la salle r est appropriée, c'est-à-dire P rt = {p ∈ P : r ∈ Rp; t ∈ T p}.

#### 2.3. Formulation en programmation en nombres entiers

En utilisant la notation définie à la Section 2.2, nous présentons une formulation en programmation en nombres entiers d'un modèle de regroupement basé sur des modèles pour l'affectation des salles. Dans cette formulation, les variables binaires x pr sont indexées par des affectations réalisables de modèles à des salles. Plus précisément, soit la variable x pr qui prend la valeur 1 si le modèle p ∈ P doit être tenu dans la salle r ∈ Rp. Pour une fonction objective donnée w (représentant une mesure de la qualité de la solution), une affectation optimale des modèles aux salles peut être déterminée en résolvant les programmes entiers suivants (1)–(5):


Les contraintes (2) garantissent qu'au maximum un événement est affecté à chaque salle à chaque période, tandis que les contraintes (3) garantissent qu'au maximum une salle est affectée à chaque événement. Les contraintes (3) n'ont pas besoin d'être satisfaites avec égalité, car il n'est pas supposé qu'une affectation réalisable de salle pour tous les événements existe. Les contraintes (4) garantissent que chaque cours utilise au maximum un modèle par salle, c'est-à-dire que tous les événements d'un cours affectés à une salle doivent faire partie du même modèle (maximal).

Le modèle est résolu de manière hiérarchique ou lexicographique, c'est-à-dire successivement pour une série prescrite de mesures de qualité de solution. Cela signifie qu'un modèle est résolu pour chacun des différents objectifs, où chaque fonction objective apparaît comme une contrainte stricte dans les optimisations ultérieures. Les objectifs particuliers utilisés et leur ordre lexicographique dépendront des besoins d'une institution particulière. Par exemple, étant donné les fonctions objectives et leurs valeurs (w l, w l0), l ∈ {1, …, k-1}, le kth programme entier inclurait les contraintes (6).


Le modèle est qualifié de basé sur des modèles car P contient tous les modèles d'événements pour chaque cours. Cependant, selon la fonction objective w, nous pouvons formuler le modèle avec un ensemble restreint de modèles P ⊆ P sans perdre de capacité de modélisation.

Si P est restreint aux seuls modèles correspondant à un seul événement, c'est-à-dire P = E, alors le modèle basé sur les événements est obtenu. Cela peut être utilisé pour toute mesure de qualité qui se rapporte à la pertinence d'une salle pour un événement particulier, c'est-à-dire des mesures basées sur des événements. Cela contraste avec les mesures basées sur des modèles qui se rapportent à la pertinence d'une salle pour tout ensemble d'événements de cours (voir Section 2.4).

Pour un modèle basé sur des événements, si nous considérons l'exigence supplémentaire de stabilité de salle contiguë, alors pour chaque événement long, nous devons inclure le modèle de tous les événements constitutifs ensemble et supprimer le modèle à événement unique pour chacun des événements longs. Ce n'est plus un modèle purement basé sur des événements, ce qui a des implications pour sa complexité et sa difficulté computationnelle, comme expliqué dans la Section 3. Pour les modèles purement basés sur des événements, et ceux qui nécessitent une stabilité de salle contiguë, nous devons omettre les contraintes (4) qui ne sont valides que lorsqu'un événement peut faire partie de plus d'un modèle.

Si P est restreint aux seuls modèles correspondant à un cours complet, c'est-à-dire P = C, alors le modèle basé sur des cours est obtenu. Notez que toute solution réalisable au modèle basé sur des cours exige que chaque cours utilise la même salle pour tous les événements, ce qui n'est généralement pas réalisable en pratique. Les contraintes (4) doivent de nouveau être omises, car elles sont redondantes dans ce cas.




### 3. Difficulté computationnelle

La complexité computationnelle du problème d'affectation des salles a été abordée par Carter et Tovey [11]. Dans cette section, nous passons en revue et développons leurs conclusions en examinant la structure des programmes mathématiques.

#### 3.1. Problèmes basés sur les événements

La classe la plus simple de problèmes d'affectation des salles est celle qui peut être formulée avec un modèle basé sur les événements (P = E). Cela nécessite que les événements longs, qui s'étendent sur plusieurs périodes de temps, ne nécessitent pas la même salle pour chaque période (c'est-à-dire qu'il n'y a pas d'exigence de stabilité des salles contiguës). Il est également supposé que nous ne mesurons pas la stabilité des salles de cours. Comme il n'y a pas d'interdépendances entre les périodes, Carter et Tovey se réfèrent à cela comme le problème "à une période" où chaque période peut être résolue séparément comme un problème d'affectation. Pour toute fonction objective (1), la matrice de contraintes définie par (2)–(3) (puisque (4) est invalide) de ce problème est connue pour être totalement unimodulaire. Par conséquent, les modèles basés sur les événements peuvent être résolus en temps polynomial en utilisant un algorithme de problème d'affectation (par exemple, l'algorithme hongrois) ou en résolvant le programme linéaire basé sur les événements.

#### 3.2. Problèmes basés sur les événements avec stabilité des salles contiguës

Une classe de problèmes plus utile en pratique est celle qui impose la stabilité des salles contiguës pour les événements longs. Carter et Tovey [11] se réfèrent à cela comme le "problème d'intervalle" et prouvent qu'il est NP-difficile de trouver une solution faisable même lorsque le problème est limité à seulement deux périodes de temps. Comme introduit dans la section 2.2, modéliser la stabilité des salles contiguës signifie que nous ne pouvons plus utiliser un modèle purement basé sur les événements, car des modèles sont nécessaires pour placer les événements constituants d'un événement long dans la même salle. Cela modifie la structure de la matrice, de sorte que des fractions peuvent apparaître, c'est-à-dire que la relaxation PL n'est plus garantie d'être naturellement entière. Le plus petit exemple de cela a été présenté par Carter et Tovey, montré ici comme l'Exemple 2. Pour chaque cours c dans le Tableau 5, les événements sont montrés dans leurs périodes respectives, et les salles faisables pour ce cours sont données comme Rc. Pour notre formulation définie par (1)–(5), la matrice de contraintes pour ce problème est montrée dans la Fig. 5. Cet exemple se trouve également être un problème basé sur les cours (un modèle correspondant à tous les événements d'un cours), de sorte que des variables sont générées pour chaque cours pour chaque salle faisable. Les contraintes (2) sont identifiées par la période et la salle, et les contraintes (3) sont identifiées par le cours auquel elles s'appliquent.

**Exemple 2.** Un problème minimal basé sur les événements avec des exigences de stabilité des salles contiguës présentant des cycles 2 d'ordre fractionnant 7.

Résoudre le PI (avec la matrice de contraintes montrée dans la Fig. 2) pour maximiser le nombre d'heures d'événements, sous réserve des exigences de stabilité des salles contiguës, trouvera une solution optimale qui assigne 7 (sur 8) événements. Cependant, la relaxation PL peut assigner tous les 8 événements, avec chaque variable prenant la valeur de 0,5.

Les premiers travaux sur les propriétés des matrices binaires [4,29] montrent que les cycles 2 d'ordre impair (sous-matrices avec des sommes de lignes et de colonnes égales à 2) au sein d'une matrice de contraintes binaire permettent l'apparition de solutions fractionnaires. Inversement, si de tels cycles n'existent pas, la matrice est dite équilibrée et le problème sera naturellement entier (c'est-à-dire résoluble en tant que programme linéaire). Les lignes et colonnes de la matrice de contraintes de l'Exemple 2 (Fig. 2) ont été ordonnées pour montrer les cycles 2 d'ordre impair qui causent la solution fractionnaire observée dans la PL et l'écart d'intégralité correspondant. Un cycle d'ordre 7 peut être formé en partant de l'une des colonnes 'B' ou 'D' (4 au total), et en se connectant à chaque variable adjacente à droite jusqu'à ce que l'autre colonne de ce cours soit rencontrée (en traitant la colonne la plus à droite comme connectée à la colonne la plus à gauche). Le cycle qui commence à Dr1 est ombré.

Pour que ce type de cycle (Fig. 2) cause un écart d'intégralité, par rapport à l'objectif des heures d'événements, une structure très spécifique doit être présente. En particulier, chacune des six combinaisons possibles de deux salles (sur les quatre salles au total) doit être les seules salles faisables (Rc) pour chacun des six cours. De plus, il ne doit y avoir aucun chevauchement dans les salles faisables entre les cours se déroulant uniquement en t1, ceux en t2 uniquement et ceux dans les deux périodes. Les événements de cours peuvent généralement se tenir dans n'importe quelle salle fournissant au moins assez de sièges pour la taille du cours et possédant au moins les attributs de salle demandés. Par conséquent, l'ensemble des salles faisables pour un cours sera un sur-ensemble de celles pour tout cours plus grand et pour tout cours nécessitant des attributs supplémentaires. En raison de cette relation d'ensemble imbriquée, il est peu probable que tant de combinaisons différentes de salles se produisent en tant qu'ensemble de salles faisables pour différents cours. De plus, t1 et t2 doivent être des périodes de temps consécutives, plutôt que deux périodes de temps quelconques. Toute modification des salles faisables ou des périodes de temps pour chaque cours fermera l'écart d'intégralité et pourrait potentiellement briser la structure du cycle dans la matrice. Par exemple, si la salle 1 était retirée de l'ensemble des salles faisables pour le cours A, cela briserait le cycle montré dans la Fig. 2, et la solution optimale PL aurait une valeur objective de 7, la même que la solution optimale PI. Inversement, si la salle 3 était ajoutée à l'ensemble des salles faisables pour le cours A (en plus des salles existantes 1 et 2), une solution PI existerait à la valeur objective de la PL de 8, fermant ainsi l'écart d'intégralité.

Il est également possible de construire des cycles d'ordre supérieur en étendant ce cycle (Fig. 2) à travers plus de cours dans les deux périodes de temps, ou en l'étendant à travers plus de périodes de temps contiguës. Cependant, cela repose sur une structure encore plus spécifique à être présente dans le problème.

Lorsque les solutions fractionnaires correspondant à des cycles d'ordre impair ne causent pas un écart d'intégralité, elles ne sont pas exclues d'apparaître dans une solution de la PL, cependant elles sont moins susceptibles d'être trouvées par un solveur PI. Cela a été confirmé dans nos tests sur les données de l'Université d'Auckland (pour le modèle basé sur les événements avec stabilité des salles contiguës) pour tous les objectifs énumérés dans la section 2.4. Résoudre la relaxation PL renvoie une solution avec un très petit nombre de variables fractionnaires (typiquement correspondant à 1 ou 2 ensembles de cycles montrés dans la Fig. 2), sans écart d'intégralité (pour toute mesure objective). Il est intéressant de noter que si nous résolvons le PI avec Gurobi [18], un solveur propriétaire, une solution optimale est trouvée au nœud racine même avec tous les pré-traitements, coupures et heuristiques désactivés. Cela suggère que Gurobi effectue des itérations de PL supplémentaires « integerisant » lorsqu'il résout la relaxation PL d'un PI.

Bien que notre problème de l'Université d'Auckland ne soit clairement pas naturellement entier, les fractions qui apparaissent sont très limitées en nombre et ne causent pas un écart d'intégralité. Sans utiliser un solveur PI, nous avons pu trouver une solution PI optimale en ajoutant de petites perturbations aux coefficients objectifs des modèles représentant des événements longs. Nous avons également pu utiliser une approche de plan de coupure pour trouver une solution PI optimale, en appliquant toutes les inégalités de trous impairs violées à la solution optimale PL, puis en résolvant à nouveau la PL. Les résultats obtenus en utilisant le solveur PI Gurobi et en utilisant ces méthodes basées sur la PL démontrent que, bien que ce problème d'optimisation soit NP-difficile, la structure de nos problèmes pratiques est telle que toutes les fractions qui apparaissent peuvent être facilement gérées.

Nous pensons que l'improbabilité de rencontrer des cycles de la nature montrée dans la Fig. 2 explique également pourquoi les travaux antérieurs de Gosselin et Truchon [17] ont rapporté des PL naturellement entières. Nos tests et les leurs ont été effectués sur des données réelles, et la méthode de séparation et évaluation n'a pas

 été nécessaire. Par conséquent, il semble probable que les problèmes pratiques basés sur les événements avec exigences de stabilité des salles contiguës peuvent être résolus efficacement.

#### 3.3. Problèmes basés sur les modèles

La classe la plus difficile de problèmes d'affectation des salles est celle qui nécessite un modèle basé sur les modèles (P = P), car elle considère une mesure de qualité basée sur les modèles telle que la stabilité des salles de cours. Nous abordons la stabilité des salles de cours comme une mesure de qualité à maximiser, plutôt qu'une contrainte stricte où tous les événements d'un cours doivent se dérouler dans la même salle. Carter et Tovey [11] n'abordent que le second cas, qu'ils appellent le « problème non intervalle ». Dans le contexte de notre formulation, le problème non intervalle est représenté par un modèle basé sur les cours, un cas particulier du modèle basé sur les modèles, qui est peu probable d'avoir une solution faisable pour des problèmes pratiques. Pour modéliser la stabilité des salles de cours comme une mesure de qualité, pour chaque cours, nous devons générer un modèle pour chaque sous-ensemble des événements du cours (comme décrit dans la section 2.2), pour chaque salle. Pour les cours avec seulement deux événements, les trois modèles générés par salle correspondent au premier événement uniquement « modèle 1 », au deuxième événement uniquement « modèle 2 » et aux deux événements « modèle 3 ».

Un exemple minimal de problème basé sur les modèles difficile est montré comme l'Exemple 3. Pour ce problème (spécification dans le Tableau 6), il n'est pas possible d'offrir une salle stable à tous les cours. Pour notre formulation définie par (1)–(5), la partie fractionnée de la matrice de contraintes est montrée dans la Fig. 3. Notez que seules les contraintes (2 et les variables qui se rapportent au « modèle 3 » (les deux événements) pour chaque cours sont montrées.

**Exemple 3.** Un problème minimal basé sur les modèles présentant des cycles 2 d'ordre fractionnant 3.

Résoudre le PI (avec la matrice de contraintes partielle montrée dans la Fig. 3) pour maximiser la stabilité des salles de cours trouvera une solution optimale avec une qualité de -1 (une pénalité de 1). Cependant, la relaxation PL peut trouver une solution optimale avec une qualité de 0 (aucune pénalité), avec chaque variable « modèle 3 » (celles montrées dans la Fig. 3) prenant la valeur 0,5, et les autres variables prenant la valeur 0.

Ici, les solutions entières entraînent une pénalité car elles nécessitent qu'au moins l'un des cours utilise les variables indésirables « modèle 1 » et « modèle 2 », qui assignent deux événements d'un même cours à des salles différentes. La matrice de contraintes dans la Fig. 3 montre comment les variables « modèle 3 » souhaitables de chaque cours peuvent former des cycles 2 d'ordre impair (comme ombré). Notez que le cycle est entièrement contenu dans les contraintes (2), ce qui signifie que deux variables doivent seulement être connectées en représentant des modèles occupant la même salle en même temps. Cela contraste avec les cycles de l'Exemple 2 qui impliquent également les contraintes (3).

Les exigences pour que ce type de cycle (Fig. 3) existe sont qu'il doit y avoir trois cours qui partagent deux salles faisables communes et chaque cours doit figurer dans deux des trois périodes de temps différentes. Pour causer un écart d'intégralité par rapport à l'objectif de stabilité des salles de cours, il doit également y avoir une pénurie relative de salles faisables disponibles pour ces cours, dans les périodes de temps particulières. Cela pourrait être dû à un taux d'utilisation généralement élevé de toutes les salles, ou parce que des tailles et types particuliers de salles sont en pénurie. Clairement, si une troisième salle était introduite dans l'Exemple 3 qui était faisable pour même un des cours, les mêmes cycles existeraient, mais il n'y aurait plus d'écart d'intégralité.

Comme il n'y a pas d'exigence spécifique de faisabilité de la salle (contrairement à l'Exemple 2), et que les cycles peuvent être formés sur n'importe quelles trois périodes de temps, il y a beaucoup plus d'opportunités pour que de tels cycles se produisent. Lorsque ces cycles font partie d'un problème plus grand, notez que les cours n'ont pas besoin d'avoir le même nombre d'événements que les autres, car le modèle basé sur les modèles permet à n'importe quel sous-ensemble d'événements d'être indépendant (en termes de salle) du reste des événements d'un cours. En conséquence, les cours avec un grand nombre d'événements sont un contributeur majeur à ce type de fractionnalité, car ils introduisent de nombreux modèles qui couvrent différentes périodes de temps. Des cycles plus grands avec cette structure de base peuvent également exister, par exemple en utilisant 5 cours et 5 périodes de temps au lieu de 3.

Nous avons résolu la relaxation PL pour le modèle basé sur les modèles optimisant la stabilité des salles de cours sur les données de l'Université d'Auckland et l'ITC. Les solutions PL étaient généralement beaucoup plus fractionnelles que celles pour le modèle basé sur les événements avec stabilité des salles contiguës, et la plupart des problèmes avec une pénalité non nulle à la solution optimale PI avaient un écart d'intégralité. Une approche de plan de coupe utilisant des inégalités de trous impairs et de cliques (mentionnées pour l'Exemple 2) était beaucoup moins efficace en raison de nombreuses opportunités pour que les fractions réapparaissent sans réduire l'écart. Par conséquent, la plupart des problèmes pratiques basés sur les modèles nécessitent l'utilisation d'un solveur PI sophistiqué (utilisant des techniques telles que le pré-traitement, les coupes, les heuristiques et le branchement), comme couvert dans nos principaux résultats de la section 5.





### 3.4. Contraintes d'optimisation lexicographique

Jusqu'à présent, nous avons examiné la difficulté des problèmes d'affectation des salles définis par les équations (1) à (5). Le dernier facteur à aborder est l'effet de l'ajout de contraintes d'optimisation lexicographique (6). Lors de la résolution d'un modèle purement basé sur les événements, rappelons que la matrice de contraintes (définie par (2)–(3), puisque (4) est invalide) est totalement unimodulaire. En conséquence, le polytope défini par les contraintes a des points extrêmes entiers. Si nous résolvons ce modèle de manière optimale pour une mesure objective basée sur les événements, la solution doit se situer sur une face du polytope, qui elle-même doit avoir des points extrêmes entiers. Par conséquent, si nous ajoutons une contrainte lexicographique (6) à un modèle basé sur les événements, la nouvelle région faisable est cette face, qui doit rester naturellement entière. Bien que la nouvelle matrice de contraintes puisse ne plus être totalement unimodulaire (en raison des éléments de la contrainte (6)), elle conservera la propriété naturellement entière pour tout nombre de contraintes ajoutées par ce processus. La relaxation LP peut être légèrement plus difficile à résoudre pour chaque contrainte lexicographique ajoutée, cependant, aucune programmation en nombres entiers n'est requise, donc le temps de résolution devrait être acceptable pour tous les problèmes pratiques.

Pour les modèles basés sur les événements avec des exigences de stabilité des salles contiguës et pour les modèles basés sur les modèles, nous avons démontré que des points extrêmes fractionnaires existent sur le polytope. L'ajout d'une contrainte lexicographique ne limitera que la région faisable à une face de ce polytope, qui peut encore inclure ces points extrêmes. Par conséquent, l'ajout de contraintes lexicographiques ne rendra pas nécessairement le problème plus facile ou n'éliminera pas les solutions fractionnaires. Cependant, ces deux modèles diffèrent par la quantité et la nature des solutions fractionnaires qui apparaissent pour les instances pratiques. En raison des structures fractionnaires limitées dans la relaxation LP pour les modèles basés sur les événements avec des exigences de stabilité des salles contiguës, ceux-ci peuvent encore généralement être résolus dans un temps acceptable.

Comme montré par l'Exemple 3, les structures fractionnaires se forment plus facilement dans les modèles basés sur les modèles, ce qui peut les rendre nettement plus difficiles à résoudre que les modèles basés sur les événements. De plus, dans un ordre lexicographique d'objectifs, une fois qu'une mesure basée sur les modèles est utilisée, toutes les itérations suivantes nécessiteront un modèle basé sur les modèles. En raison du potentiel de fractionnement, le temps de résolution pour différents problèmes basés sur les modèles peut varier considérablement, ce qui est le principal objectif de la section 5, nos résultats computationnels pratiques.






### 4. Planification des cours à l'Université d'Auckland

Dans cette section, nous décrivons le processus qui a été utilisé avec succès pour trouver des emplois du temps de cours faisables à l'Université d'Auckland, ainsi que des affectations optimales de salles pour ces emplois du temps, entre 2005 et 2010.

#### 4.1. Le problème

Le calendrier académique de l'Université d'Auckland consiste principalement en deux semestres de douze semaines. Le premier semestre commence au début du mois de mars, tandis que le second commence à la mi-juillet. Dans chaque semestre, un emploi du temps hebdomadaire est répété sur les cinquante heures de cours principales, de 8h00 à 18h00, du lundi au vendredi. Les départements pédagogiques de l'université offrent des cours, qui font souvent partie d'un ou plusieurs programmes d'études, un ensemble de cours suivis simultanément par un groupe commun d'étudiants. Comme les conflits d'emploi du temps sont basés sur les programmes d'études (plutôt que sur les données d'inscription des étudiants), ce problème est un problème de planification des cours basée sur le programme (CB-CTT).

Le principal campus de la ville dispose d'un pool de salles de cours communes ou de salles en pool qui peuvent être utilisées chaque heure de chaque jour de la semaine. L'unité de gestion des amphithéâtres (LTMU) est responsable de l'affectation et de la réservation de ces salles, à la fois de manière ad hoc et pour les cours planifiés. Les statistiques relatives aux demandes de salles en pool sur le campus de la ville lors des semestres 1 et 2 de 2010 sont présentées dans le Tableau 7. Aux fins du Tableau 7, un "événement" fait référence à une réunion de classe de toute durée (c'est-à-dire incluant les événements longs).

Notez que pour modéliser notre problème pratique, nous devons considérer les "cours" (tels que définis par une faculté) qui incluent un composant de conférence et un composant de tutorat et/ou de laboratoire. Cependant, les événements pour ces composants seront très probablement différents en termes d'attributs de salle requis et de nombre d'étudiants, et ne peuvent donc pas faire partie du même cours \( c \in C \) par définition. Par exemple, un cours peut comprendre trois heures de conférence hebdomadaires, auxquelles assistent tous les étudiants, et cinq heures de tutorat dont chaque étudiant assistera à une seule. Il est souhaitable que toutes les conférences se tiennent dans la même salle, mais ce n'est pas le cas pour les tutorats, car chacun est suivi par un groupe différent d'étudiants. Dans la notation de la Section 2.2, nous pouvons modéliser cela en créant un cours \( c \in C \) pour le composant de conférence (avec trois événements demandant un grand amphithéâtre) et cinq cours pour le composant de tutorat (chacun avec un événement demandant une petite salle de tutorat). Cela contribue à six cours \( c \in C \) au décompte dans le Tableau 7. Aux fins de la génération d'un emploi du temps, les composants de conférence et de tutorat doivent être dans un programme ensemble (pour éviter les conflits de temps). Cependant, pour les besoins de l'affectation des salles, les composants sont entièrement indépendants.

#### 4.2. Processus de solution

Il y a deux phases distinctes dans le processus de planification des cours à l'Université d'Auckland. Initialement, la "phase de faisabilité" se déroule de juillet à octobre de l'année précédente. Pendant cette période, un emploi du temps faisable est construit pour les deux semestres et des affectations de salles provisoires sont faites en fonction des tailles de salles demandées et des attributs de salles demandés. Cela est suivi par la "phase d'inscription" qui se déroule de novembre jusqu'à la deuxième semaine de cours de chaque semestre.

Initialement, chaque faculté génère son propre emploi du temps (périodes pour chaque événement) pour répondre à ses besoins spécifiques. Cela inclut la recherche d'une solution de haute qualité pour ses étudiants et son personnel, tout en respectant les exigences de non-recouvrement pour les cours au sein d'un programme et les cours qui doivent être enseignés par un même enseignant. Cependant, cela n'est généralement pas une tâche majeure car il s'agit de faire des changements progressifs à l'emploi du temps de l'année précédente. Des lignes directrices sont fournies aux facultés pour aider à obtenir une bonne répartition des événements tout au long de la journée et de la semaine. D'autres règles existent, telles que "les événements de deux heures doivent commencer à une heure paire" et "les événements de trois heures ou plus sont acceptés uniquement sur arrangement", car ils sont considérés comme perturbant la possibilité de placer des événements réguliers d'une heure dans les salles.

Les emplois du temps des facultés sont collectés par le LTMU qui tente de trouver une affectation de salles faisable de haute qualité. Si aucune affectation de salle faisable n'existe, l'emploi du temps doit être modifié pour qu'une affectation faisable puisse être trouvée, ce qui est similaire à un problème de perturbation minimale [26]. Lors d'une réunion présidée par le LTMU, des conflits spécifiques sont abordés et les facultés ajustent leurs emplois du temps et/ou les tailles et attributs de salles demandés. Ce processus se répète jusqu'à ce qu'une affectation de salle faisable puisse être trouvée. Un aperçu de ce processus est montré dans la Fig. 4.

La première optimisation de l'affectation des salles maximise le nombre d'heures d'événements qui peuvent être assignées à une salle (en utilisant un modèle basé sur les événements avec stabilité des salles contiguës) pour l'emploi du temps de départ. Inévitablement, l'emploi du temps de départ ne permettra pas qu'une affectation de salle faisable existe (en raison de la surcharge des périodes les plus désirables). Comme mentionné dans la Section 2, il est utile d'optimiser lexicographiquement plusieurs autres mesures de qualité, ce qui aidera à déterminer comment modifier l'emploi du temps. Dans ce cas, nous maximisons les heures d'étudiants assis, puis l'utilisation des sièges et enfin la préférence de la salle pour garantir que les événements spécifiques qui sont assignés à une salle sont généralement de grands événements qui s'adaptent bien à leurs salles. Ce processus lexicographique devra se produire pour chaque modification de l'emploi du temps, mais chacune de ces mesures est basée sur les événements, donc un temps d'exécution relativement rapide peut être attendu (voir Section 3).

Une fois que tous les événements peuvent être assignés à une salle (c'est-à-dire que la valeur objective de la maximisation des heures d'événements est égale au nombre total d'événements), une affectation de salle faisable a été trouvée. Par la suite, les mesures de qualité les plus importantes pour une affectation de salle faisable sont optimisées. La première priorité est la préférence de salle qui place les événements dans des salles proches de leur département d'enseignement. La stabilité des salles de cours est ensuite d'importance secondaire et tentera de placer les événements d'un cours dans une salle commune. Enfin, l'optimisation de la robustesse des sièges de réserve est utile pour améliorer la probabilité que cette affectation de salle reste faisable, malgré la variabilité inévitable des inscriptions. La stabilité des salles de cours est connue pour être une mesure computationnellement difficile (voir Section 3), cependant cette mesure n'a besoin d'être optimisée que pour des affectations de salle faisables.

Après la publication du calendrier et de l'emploi du temps faisable pour l'année suivante, la phase d'inscription commence. Pendant que l'université prend des inscriptions, les nombres sont étroitement surveillés et des modifications de l'emploi du temps et des affectations de salle sont envisagées si nécessaire.

En impliquant directement les facultés depuis la génération de l'emploi du temps jusqu'à toute arbitrage, les demandes du personnel sont satisfaites autant que possible. Dans leur étude pratique de l'automatisation du système de planification des cours d'un seul département, Schimmelpfeng et Helber [30] ont observé que le personnel semblait démontrer une connaissance d'un emploi du temps qui avait fonctionné les années précédentes. Jusqu'à ce qu'un processus automatisé puissant existe pour générer des emplois du temps universitaires pour des institutions très grandes (avec des mesures de qualité complexes et variables en interne), nous pensons qu'il est précieux de conserver l'implication du personnel autant que possible.
