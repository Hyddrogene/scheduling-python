Parfait, parlons du **routing** (ou routage) et de comment le g√©rer en PHP **pur**, y compris pour des pages 404. On va d√©tailler √ßa proprement.

---

# **1. Qu‚Äôest-ce que le routing (routage) ?**

Le **routing** est le m√©canisme qui permet de **diriger une requ√™te HTTP vers le bon contenu ou la bonne logique** en fonction de l‚ÄôURL demand√©e.

### Exemple concret

* `/` ‚Üí page d‚Äôaccueil
* `/contact` ‚Üí page contact
* `/blog/article-123` ‚Üí article sp√©cifique

Sans routing, chaque URL correspondrait directement √† un fichier physique sur le serveur (`index.html`, `contact.html`, etc.). Avec le routing :

* Une seule entr√©e (souvent `index.php`) peut **interpr√©ter toutes les URLs** et d√©cider quoi afficher.

### Avantages

1. **URLs propres et lisibles** (`/blog/mon-article` plut√¥t que `index.php?id=123`).
2. **Contr√¥le centralis√©** de toutes les pages.
3. **Gestion facile des erreurs** (ex: 404).

---

# **2. Routing simple en PHP pur**

On peut faire un routing **sans framework**, directement dans `index.php`.

### a) Exemple basique

```php
<?php
// index.php

// R√©cup√©rer l'URL demand√©e
$request = $_SERVER['REQUEST_URI'];

// Supprimer les param√®tres GET pour simplifier
$request = parse_url($request, PHP_URL_PATH);

// Routing
switch ($request) {
    case '/':
        require __DIR__ . '/pages/home.php';
        break;

    case '/contact':
        require __DIR__ . '/pages/contact.php';
        break;

    case '/about':
        require __DIR__ . '/pages/about.php';
        break;

    default:
        // Page non trouv√©e
        http_response_code(404); // important pour que le navigateur comprenne que c'est une erreur
        require __DIR__ . '/pages/404.php';
        break;
}
```

### b) Explications

* `$_SERVER['REQUEST_URI']` contient l‚ÄôURL demand√©e (ex: `/contact?ref=google`).
* `parse_url($request, PHP_URL_PATH)` enl√®ve les param√®tres GET.
* `switch` d√©cide quel fichier inclure selon l‚ÄôURL.
* `http_response_code(404)` : indique au navigateur et aux moteurs de recherche que la page est introuvable.

### c) Fichier 404 (`pages/404.php`)

```php
<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <title>Page non trouv√©e</title>
</head>
<body>
    <h1>404 - Page introuvable</h1>
    <p>La page que vous cherchez n‚Äôexiste pas.</p>
    <a href="/">Retour √† l'accueil</a>
</body>
</html>
```

---

# **3. Am√©lioration : Routing dynamique**

Pour des routes avec param√®tres (ex: `/blog/article-123`) :

```php
$request = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);

$routes = [
    '/' => 'pages/home.php',
    '/contact' => 'pages/contact.php',
    '/about' => 'pages/about.php',
];

if (preg_match('#^/blog/([a-zA-Z0-9-]+)$#', $request, $matches)) {
    $article = $matches[1];
    require __DIR__ . '/pages/blog.php';
} elseif (isset($routes[$request])) {
    require __DIR__ . $routes[$request];
} else {
    http_response_code(404);
    require __DIR__ . '/pages/404.php';
}
```

* Ici `preg_match` capture la partie dynamique de l‚ÄôURL (ex: `article-123`) et la stocke dans `$article`.
* On peut alors l‚Äôutiliser pour r√©cup√©rer un article en base de donn√©es ou g√©n√©rer dynamiquement du contenu.

---

# **4. Points cl√©s √† retenir**

1. Le **routing centralise le contr√¥le des URLs**.
2. On peut g√©rer les **pages 404** avec `http_response_code(404)` et un fichier d√©di√©.
3. PHP pur permet tout : pas besoin de framework, mais les frameworks rendent tout √ßa plus facile et s√©curis√©.
4. Avec le **routing dynamique**, une seule page peut g√©rer plusieurs URLs avec des param√®tres.

---

üí° **Astuce pratique** : pour que toutes les URLs passent par `index.php` (utile pour routing pur), il faut configurer le serveur :

### Apache `.htaccess`

```apache
RewriteEngine On
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule ^ index.php [QSA,L]
```

* Tout ce qui n‚Äôest pas un fichier ou dossier r√©el sera redirig√© vers `index.php`.

### Nginx

```nginx
location / {
    try_files $uri /index.php?$query_string;
}
```

---

Si tu veux, je peux te faire un **exemple complet d‚Äôarborescence de projet avec routing pur et pages 404**, pr√™t √† copier-coller et tester, pour que tu voies concr√®tement comment √ßa fonctionne.

Veux‚Äëtu que je fasse √ßa‚ÄØ?
